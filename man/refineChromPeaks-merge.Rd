% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/functions-Params.R, R/methods-XCMSnExp.R
\docType{methods}
\name{MergeNeighboringPeaksParam}
\alias{MergeNeighboringPeaksParam}
\alias{refineChromPeaks,XCMSnExp,MergeNeighboringPeaksParam-method}
\alias{MergeNeighboringPeaksParam-class}
\alias{show,MergeNeighboringPeaksParam-method}
\title{Merge neighboring and overlapping chromatographic peaks}
\usage{
MergeNeighboringPeaksParam(expandRt = 2, expandMz = 0, ppm = 10,
  minProp = 0.75)

\S4method{refineChromPeaks}{XCMSnExp,MergeNeighboringPeaksParam}(object,
  param = MergeNeighboringPeaksParam(), msLevel = 1L,
  BPPARAM = bpparam())
}
\arguments{
\item{expandRt}{\code{numeric(1)} defining by how many seconds the retention time
window is expanded on both sides to check for overlapping peaks.}

\item{expandMz}{\code{numeric(1)} constant value by which the m/z range of each
chromatographic peak is expanded (on both sides!) to check for
overlapping peaks.}

\item{ppm}{\code{numeric(1)} defining a m/z relative value (in parts per million)
by which the m/z range of each chromatographic peak is expanded
to check for overlapping peaks.}

\item{minProp}{\code{numeric(1)} between \code{0} and \code{1} representing the proporion
of intensity to be required for peaks to be joined. See description for
more details. The default (\code{minProp = 0.75}) means that peaks are only
joined if the signal half way between then is larger 75% of the smallest
of the two peak's \code{"maxo"} (maximal intensity at peak apex).}

\item{object}{\link{XCMSnExp} object with identified chromatographic peaks.}

\item{param}{\code{MergeNeighboringPeaksParam} object defining the settings for
the method.}

\item{msLevel}{\code{integer} defining for which MS level(s) the chromatographic
peaks should be merged.}

\item{BPPARAM}{parameter object to set up parallel processing. Uses the
default parallel processing setup returned by \code{bpparam()}. See
\code{\link[=bpparam]{bpparam()}} for details and examples.}
}
\value{
\code{XCMSnExp} object with chromatographic peaks matching the defined
conditions being merged.
}
\description{
Peak detection sometimes fails to identify a chromatographic peak correctly,
especially for broad peaks and if the peak shape is irregular (mostly for
HILIC data). In such cases several smaller peaks are reported. This function
tries to combine such peaks again if they are overlappoing on m/z dimension
and  considering their distance in retention time dimension and the measured
intensity between them.

Chromatographic peaks are first expanded in m/z and retention time dimension
by \code{expandMz} and \code{expandRt} and subsequently grouped into candidates for
merging if they are (after expansion) overlapping in both m/z and rt (within
the same sample). Peaks are merged if the intensity at the position at half
way between them (i.e. at half the distance between \code{"rtmax"} of the first
and \code{"rtmin"} of the second peak) is larger than a certain proportion
(\code{minProp}) of the smaller maximal intensity (\code{"maxo"}) of both peaks.
The joined peaks get the \code{"mz"}, \code{"rt"}, \code{"sn"} and \code{"maxo"} values from
the peak with the largest signal (\code{"maxo"}) as well as its row in the
metadata data frame of the peak (\code{chromPeakData}). The \code{"rtmin"}, \code{"rtmax"}
of the merged peaks are updated and \code{"into"} is recalculated based on all
the signal between \code{"rtmin"} and \code{"rtmax"} of the new merged peak.
}
\note{
Note that \strong{each} peak gets expanded by \code{expandMz} and \code{expandRt}, thus
peaks differing by \code{2 * expandMz} (or \code{expandRt}) will be identified as
\emph{overlapping}. As an example: m/z max of one peak is 12.2, m/z min of
another one is 12.4, if \code{expandMz = 0.1} the m/z max of the first peak
will be 12.3 and the m/z min of the second one 12.3, thus both are
considered overlapping.

\code{refineChromPeaks} methods will always remove feature definitions, because
a call to this method can change or remove identified chromatographic peaks,
which may be part of features.
}
\examples{

xd <- readMSData(system.file('cdf/KO/ko15.CDF', package = "faahKO"),
    mode = "onDisk")
xd <- findChromPeaks(xd, param = CentWaveParam(noise = 5000))

## Example of a split peak that will be merged
mzr <- 305.1 + c(-0.01, 0.01)
chr <- chromatogram(xd, mz = mzr)
plot(chr)

## Combine the peaks
res <- refineChromPeaks(xd, param = MergeNeighboringPeaksParam(expandRt = 4))
chr_res <- chromatogram(res, mz = mzr)
plot(chr_res)

## Example of a peak that was not merged, because the signal between them
## is lower than the cut-off minProp
mzr <- 496.2 + c(-0.01, 0.01)
chr <- chromatogram(xd, mz = mzr)
plot(chr)
chr_res <- chromatogram(res, mz = mzr)
plot(chr_res)
}
\seealso{
Other chromatographic peak refinement methods: \code{\link{CleanPeaksParam}}
}
\author{
Johannes Rainer
}
\concept{chromatographic peak refinement methods}
